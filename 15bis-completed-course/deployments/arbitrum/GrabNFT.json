{
  "address": "0xD6D56bfAAD2E579d50d33889d6edE6e809Db4973",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DidNotDoSomething",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "doSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dontDoSomething",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_variable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f0c0a53a496e9c7323b16af6c635f3f159cb26948e3e93f6d7c311730194463",
  "receipt": {
    "to": null,
    "from": "0xc22B2d4F82b599f64F93c0185A044245A64b8C42",
    "contractAddress": "0xD6D56bfAAD2E579d50d33889d6edE6e809Db4973",
    "transactionIndex": 1,
    "gasUsed": "755795",
    "logsBloom": "0x
    "blockHash": "0x8fc6c9fecd2f2412ef35640069ae67be3139a38ec5ee903265cf8524be51fd53",
    "transactionHash": "0x9f0c0a53a496e9c7323b16af6c635f3f159cb26948e3e93f6d7c311730194463",
    "logs": [],
    "blockNumber": 30203143,
    "cumulativeGasUsed": "755795",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "68c7e85a33089b42de93a19168ffcb38",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DidNotDoSomething\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"doSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dontDoSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_variable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GrabNFT.sol\":\"GrabNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GrabNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract GrabNFT {\\n    // Make a call to 'CourseCompletedNFT' with 'mintNft' (contract address + fct selector)\\n    // In the vulnerable contract:\\n    // 1. callContract will perform 'delegatecall' and borrow 'doSomething()' from here\\n    // \\u2192 'doSomething()' needs to turn 1st storage slot to '123' (slot 0)\\n    // 2. callContractAgain will call this contract with the selector given\\n    // \\u2192 Here, we need to attack with reentrancy, to trigger again the calling function\\n    // ... and get 's_otherVar = s_otherVar + 1' to run AGAIN before it checks if 's_otherVar == 2'\\n    // \\u2192 Here 'fallback' will call the calling contract 'callContractAgain' (via 'doSomething()' again)\\n    // ... but not reenter again, so we use a counter for instance to trigger only once\\n\\n    uint256 public s_variable = 0;\\n    uint256 private s_otherVar = 0;\\n    address private immutable i_owner;\\n\\n    event DidNotDoSomething();\\n\\n    constructor() {\\n        i_owner = msg.sender;\\n    }\\n\\n    function doSomething() public {\\n        s_variable = 123;\\n        s_otherVar = 1;\\n    }\\n\\n    function dontDoSomething() public {\\n        emit DidNotDoSomething();\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return i_owner;\\n    }\\n}\\n\",\"keccak256\":\"0x5eff469ca22414c55c4384bd42d8f2557204c07e884e747504ae9645a2ac2b1e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260008055600060015534801561001957600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c6101d461006e600039600060bc01526101d46000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806333e7577714610051578063826926791461006f578063893d20e814610079578063b90d2c6d14610097575b600080fd5b6100596100a1565b6040516100669190610147565b60405180910390f35b6100776100a7565b005b6100816100b8565b60405161008e919061012c565b60405180910390f35b61009f6100e0565b005b60005481565b607b60008190555060018081905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f40885c5fb0de0d0ca5db9aa13ff2cc7144b585d71e9de38643ce45dea1568d9e60405160405180910390a1565b61011781610162565b82525050565b61012681610194565b82525050565b6000602082019050610141600083018461010e565b92915050565b600060208201905061015c600083018461011d565b92915050565b600061016d82610174565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220c6453c79035312e97c90c5a638badab5776bf9c2e9bcc7acf3e0aa9532806a8164736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806333e7577714610051578063826926791461006f578063893d20e814610079578063b90d2c6d14610097575b600080fd5b6100596100a1565b6040516100669190610147565b60405180910390f35b6100776100a7565b005b6100816100b8565b60405161008e919061012c565b60405180910390f35b61009f6100e0565b005b60005481565b607b60008190555060018081905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f40885c5fb0de0d0ca5db9aa13ff2cc7144b585d71e9de38643ce45dea1568d9e60405160405180910390a1565b61011781610162565b82525050565b61012681610194565b82525050565b6000602082019050610141600083018461010e565b92915050565b600060208201905061015c600083018461011d565b92915050565b600061016d82610174565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220c6453c79035312e97c90c5a638badab5776bf9c2e9bcc7acf3e0aa9532806a8164736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/GrabNFT.sol:GrabNFT",
        "label": "s_variable",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/GrabNFT.sol:GrabNFT",
        "label": "s_otherVar",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}