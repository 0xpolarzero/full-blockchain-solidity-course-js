{"version":3,"file":"bundle.umd.js","sources":["apollo-fetch.js"],"sourcesContent":["var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport 'cross-fetch/polyfill';\nfunction buildWareStack(funcs, modifiedObject, resolve) {\n    var _this = this;\n    var next = function () {\n        if (funcs.length > 0) {\n            var f = funcs.shift();\n            if (f) {\n                f.apply(_this, [modifiedObject, next]);\n            }\n        }\n        else {\n            resolve(modifiedObject);\n        }\n    };\n    next();\n}\nexport function constructDefaultOptions(requestOrRequests, options) {\n    var body;\n    try {\n        body = JSON.stringify(requestOrRequests);\n    }\n    catch (e) {\n        throw new Error(\"Network request failed. Payload is not serializable: \" + e.message);\n    }\n    return __assign({ body: body, method: 'POST' }, options, { headers: __assign({ Accept: '*/*', 'Content-Type': 'application/json' }, options.headers || []) });\n}\nfunction throwHttpError(response, error) {\n    var httpError;\n    if (response && response.status >= 300) {\n        httpError = new Error(\"Network request failed with status \" + response.status + \" - \\\"\" + response.statusText + \"\\\"\");\n    }\n    else {\n        httpError = new Error(\"Network request failed to return valid JSON\");\n    }\n    httpError.response = response;\n    httpError.parseError = error;\n    throw httpError;\n}\nfunction throwBatchError(response) {\n    var httpError = new Error(\"A batched Operation of responses for \");\n    httpError.response = response;\n    throw httpError;\n}\nexport function createApolloFetch(params) {\n    if (params === void 0) { params = {}; }\n    var constructOptions = params.constructOptions, customFetch = params.customFetch;\n    var _uri = params.uri || '/graphql';\n    var middlewares = [];\n    var batchedMiddlewares = [];\n    var afterwares = [];\n    var batchedAfterwares = [];\n    var applyMiddlewares = function (requestAndOptions, batched) {\n        return new Promise(function (resolve, reject) {\n            if (batched) {\n                buildWareStack(batchedMiddlewares.slice(), requestAndOptions, resolve);\n            }\n            else {\n                buildWareStack(middlewares.slice(), requestAndOptions, resolve);\n            }\n        });\n    };\n    var applyAfterwares = function (responseObject, batched) {\n        return new Promise(function (resolve, reject) {\n            if (batched) {\n                buildWareStack(batchedAfterwares.slice(), responseObject, resolve);\n            }\n            else {\n                buildWareStack(afterwares.slice(), responseObject, resolve);\n            }\n        });\n    };\n    var apolloFetch = function (request) {\n        var options = {};\n        var parseError;\n        var batched = Array.isArray(request);\n        var requestObject = (batched\n            ? {\n                requests: request,\n                options: options,\n            }\n            : {\n                request: request,\n                options: options,\n            });\n        return applyMiddlewares(requestObject, batched)\n            .then(function (reqOpts) {\n            var construct = constructOptions || constructDefaultOptions;\n            var requestOrRequests = reqOpts.request ||\n                reqOpts.requests;\n            return construct(requestOrRequests, reqOpts.options);\n        })\n            .then(function (opts) {\n            options = __assign({}, opts);\n            return (customFetch || fetch)(_uri, options);\n        })\n            .then(function (response) {\n            return response.text().then(function (raw) {\n                try {\n                    var parsed = JSON.parse(raw);\n                    response.raw = raw;\n                    response.parsed = parsed;\n                    return response;\n                }\n                catch (e) {\n                    parseError = e;\n                    response.raw = raw;\n                    return response;\n                }\n            });\n        })\n            .then(function (response) {\n            return applyAfterwares({\n                response: response,\n                options: options,\n            }, batched);\n        })\n            .then(function (_a) {\n            var response = _a.response;\n            if (response.parsed) {\n                if (batched) {\n                    if (Array.isArray(response.parsed)) {\n                        return response.parsed;\n                    }\n                    else {\n                        throwBatchError(response);\n                    }\n                }\n                else {\n                    return __assign({}, response.parsed);\n                }\n            }\n            else {\n                throwHttpError(response, parseError);\n            }\n        });\n    };\n    apolloFetch.use = function (middleware) {\n        if (typeof middleware === 'function') {\n            middlewares.push(middleware);\n        }\n        else {\n            throw new Error('Middleware must be a function');\n        }\n        return apolloFetch;\n    };\n    apolloFetch.useAfter = function (afterware) {\n        if (typeof afterware === 'function') {\n            afterwares.push(afterware);\n        }\n        else {\n            throw new Error('Afterware must be a function');\n        }\n        return apolloFetch;\n    };\n    apolloFetch.batchUse = function (middleware) {\n        if (typeof middleware === 'function') {\n            batchedMiddlewares.push(middleware);\n        }\n        else {\n            throw new Error('Middleware must be a function');\n        }\n        return apolloFetch;\n    };\n    apolloFetch.batchUseAfter = function (afterware) {\n        if (typeof afterware === 'function') {\n            batchedAfterwares.push(afterware);\n        }\n        else {\n            throw new Error('Afterware must be a function');\n        }\n        return apolloFetch;\n    };\n    return apolloFetch;\n}\n//# sourceMappingURL=apollo-fetch.js.map"],"names":["this"],"mappings":"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"}